Set::Infinite TODO 

    - verify and fix unbalanced trace_open/trace_close 

    - move _cleanup to S::I::Basic

    - move (offset, quantize), or most of Arithmetic.pm, to Date::Set 
    - refactor "widgets" out of the main code. Maybe create
      a Set::Infinite::Widgets directory (offset, quantize).
    - give more standard names to Arithmetic.pm variables
    - implement "last of quantize"

    - remove _quantize_span()

    - a set with min == inf or max = -inf is an error!

    - tests for "iterate" min/max/first

    - refactor backtracking, offset, quantize

    - backtrack code to 'offset' is a hack - fix it.

    - find out how to compare "<=>" unbounded sets
    - try using first() in intersects() and "<=>"

BACKTRACK

    backtrack.t:

	test backtrack on:
		iterate
		compact
		no_cleanup
                tolerance
                complement

	change $backtrack_arg2 = $arg->quantize(@param)->union(); to span()

	backtracking: should be extensible. Use tables instead of if-else
	backtracking: change ->{method} to sub-pointer instead of string ?
	backtracking: define 'backwards' method instead of if-else (near 3-08)

	backtracking: define union, complement, contains...

	backtracking: implement remaining tests in backtrack.t
	verify results in backtrack.t

        backtracking should use new min/max methods (v.45) because they are
            faster/more correct

        test finding out min/max of integer open sets (see backtrack.t tests 2,3)

	backtracking: document backtracking resolution

SYNTAX

	extra: Make a 'strict' option for "quantize" and other filters, 
	that will intersect
	each unit back to the object, that is:
	Interval:                     [************************]
	Quantized:                [*********)[*********)[*********)
	Quantized->Stricted:          [*****)[*********)[******]

	think about: "push-pop", "dup", "drop" mechanism

	think about: some "if-else" mechanism

TESTS

        more tests for min/max/span/size on too_complex sets

	old: fix Bigfloat tests

DOCUMENTATION

	check: POD formatting and contents 

	verify, document parameter syntax everywhere

	document:
		??? offset option 'mode=>circle'
		new method 'list'
		iterate
		??? no_cleanup

        document as "internal":
                min_a
                max_a
                backtrack
	        trace({options})

	??? document: quantize extensibility through hash-subs

CACHEING

	cache quantize by month/day/...
	-- doesn't work if 'quant' is changed
	-- doesn't check 'intersects'

	make a 'flush'-cache method. Make a 'cache-registry'.

	think about: caching for union, etc  

